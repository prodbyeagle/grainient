var t={d:(e,a)=>{for(var o in a)t.o(a,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:a[o]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)},e={};function a(t,e,a,o){const n=document.createElement("canvas");n.width=e,n.height=a;const r=n.getContext("2d");if(!r)return;const i=r.createImageData(e,a),l=i.data;for(let t=0;t<l.length;t+=4){const e=255*Math.random();l[t]=l[t+1]=l[t+2]=e,l[t+3]=2.55*o}r.putImageData(i,0,0),t.globalCompositeOperation="overlay",t.drawImage(n,0,0),t.globalCompositeOperation="source-over"}function o(t,e){const o=t.getContext("2d");if(!o)throw new Error("Canvas context is not available.");const{colors:n,grain:r=0,type:i="linear",angle:l=45}=e;if(n.length<2||n.length>8)throw new Error("You need to specify between 2 and 8 colors.");if(!["linear","radial"].includes(i))throw new Error('Gradient type must be "linear" or "radial".');if("linear"===i&&("number"!=typeof l||l<0||l>90))throw new Error("Angle must be a number between 0 and 90 for linear gradients.");let c;if("linear"===i){const e=t.width*Math.cos(l*Math.PI/180),a=t.height*Math.sin(l*Math.PI/180);c=o.createLinearGradient(0,0,e,a)}else c=o.createRadialGradient(t.width/2,t.height/2,0,t.width/2,t.height/2,t.width/2);const d=1/(n.length-1);n.forEach(((t,e)=>c.addColorStop(e*d,t))),o.fillStyle=c,o.fillRect(0,0,t.width,t.height),r>0&&a(o,t.width,t.height,r)}function n(t,e,a,o,n){const r=document.createElement("canvas");r.width=e,r.height=a;const i=r.getContext("2d");if(!i)return;const l=i.createImageData(e,a),c=l.data;for(let t=0;t<c.length;t+=4){const e=255*Math.random();c[t]=c[t+1]=c[t+2]=e,c[t+3]=2.55*o}i.putImageData(l,0,0);const d=Date.now()*n%e;t.globalCompositeOperation="overlay",t.drawImage(r,-d,0),t.drawImage(r,e-d,0),t.globalCompositeOperation="source-over"}function r(t,e,a){const o=t.getContext("2d");if(!o)return void console.error("Could not get 2D context from the canvas.");const{width:r,height:i}=t;!function t(){o&&n(o,r,i,e,a),requestAnimationFrame(t)}()}t.d(e,{Hf:()=>o,ZK:()=>n,Ou:()=>r,oW:()=>a});var i=e.Hf,l=e.ZK,c=e.Ou,d=e.oW;export{i as Gradient,l as applyAnimatedGrain,c as applyAnimatedGrainEffect,d as applyGrain};