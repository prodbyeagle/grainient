var e={d:(t,a)=>{for(var r in a)e.o(a,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:a[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},t={};function a(e,t,a,r){if(!e)return;const n=document.createElement("canvas");n.width=t,n.height=a;const o=n.getContext("2d");if(!o)return;const i=o.createImageData(t,a),l=i.data;for(let e=0;e<l.length;e+=4){const t=255*Math.random();l[e]=l[e+1]=l[e+2]=t,l[e+3]=2.55*r}o.putImageData(i,0,0),e.globalCompositeOperation="overlay",e.drawImage(n,0,0),e.globalCompositeOperation="source-over"}function r(e,t){const r=e.getContext("2d");if(!r)throw new Error("Canvas context is not available.");const{colors:n,grain:o=0,type:i="linear",angle:l=45}=t;if(n.length<2||n.length>8)throw new Error("You need to specify between 2 and 8 colors.");if(!["linear","radial"].includes(i))throw new Error('Gradient type must be "linear" or "radial".');if("linear"===i&&("number"!=typeof l||l<0||l>90))throw new Error("Angle must be a number between 0 and 90 for linear gradients.");let h;if("linear"===i){const t=e.width*Math.cos(l*Math.PI/180),a=e.height*Math.sin(l*Math.PI/180);h=r.createLinearGradient(0,0,t,a)}else h=r.createRadialGradient(e.width/2,e.height/2,0,e.width/2,e.height/2,e.width/2);const d=1/(n.length-1);n.forEach(((e,t)=>h.addColorStop(t*d,e))),r.fillStyle=h,r.fillRect(0,0,e.width,e.height),o>0&&a(r,e.width,e.height,o)}e.d(t,{H:()=>r,o:()=>a});var n=t.H,o=t.o;export{n as Gradient,o as applyGrain};